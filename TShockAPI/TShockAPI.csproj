<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Library</OutputType>
    <TargetFramework>net6.0</TargetFramework>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
    <!-- 
      Version information for an assembly consists of the following four values:

          Major Version
          Minor Version 
          Build Number
          Starting in version 4.2.5, we are no longer including the fourth decimal
          location, which previously held the date and time.

      Also, be sure to release on github with the exact assembly version tag as below
      so that the update manager works correctly (via the Github releases api and mimic)
    -->
    <Version>5.2.0.6</Version>
    <AssemblyTitle>TShock for Terraria</AssemblyTitle>
    <Company>Pryaxis &amp; TShock Contributors</Company>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <Product>MODEFDP.TShockAPI</Product>
    <Copyright>Copyright Â© Pryaxis &amp; TShock Contributors 2011-2023</Copyright>
    <!-- extras for nuget -->
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <PackageLicenseExpression>GPL-3.0-or-later</PackageLicenseExpression>
    <Authors>Pryaxis &amp; TShock Contributors</Authors>
    <Description>MODIFIED VERSION - TShock is a toolbox for Terraria servers and communities.</Description>
    <PackageId>MODEFDP.TShock</PackageId> <!-- package name for nuget, instead of TShockAPI -->
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="BCrypt.Net-Next" Version="4.0.3" />
    <PackageReference Include="GetText.NET" Version="1.7.14" />
    <PackageReference Include="MySql.Data" Version="8.0.31" />
    <PackageReference Include="Microsoft.Data.Sqlite" Version="6.0.11" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\TerrariaServerAPI\TerrariaServerAPI\TerrariaServerAPI.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="HttpServer">
      <HintPath>..\prebuilts\HttpServer.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <None Include="..\prebuilts\HttpServer.dll">
      <Link>HttpServer.dll</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackageCopyToOutput>true</PackageCopyToOutput>
      <Pack>true</Pack>
      <PackagePath>lib\$(TargetFramework)\</PackagePath>
    </None>
    <None Include="..\prebuilts\HttpServer.*" Exclude="..\prebuilts\HttpServer.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>HttpServer%(Extension)</Link>
      <Pack>true</Pack>
      <PackagePath>lib\$(TargetFramework)\</PackagePath>
      <Visible>false</Visible>
    </None>
    <Content Include="..\prebuilts\GeoIP.dat">
      <Link>%(Filename)%(Extension)</Link>
      <Pack>true</Pack>
      <PackageCopyToOutput>true</PackageCopyToOutput>
      <PackagePath>content/;contentFiles/any/any/</PackagePath>
      <Visible>false</Visible>
    </Content>
    <None Include="_Package.props;_Package.targets">
      <Pack>true</Pack>
      <PackagePath>build/$(PackageId)%(Extension)</PackagePath>
    </None>
  </ItemGroup>

	<ItemGroup>
		<POFiles Include="..\i18n\**\*.po">
			<IntermediateDirectory>$(IntermediateOutputPath)i18n/%(RecursiveDir)</IntermediateDirectory>
			<TargetPath>%(IntermediateDirectory)%(Filename).mo</TargetPath>
		</POFiles>
	</ItemGroup>
	
	<Target Name="FindMsgfmt" BeforeTargets="PrepareResources;AssignTargetPaths">
    <PropertyGroup>
      <MsgfmtPath Condition="'$(MsgfmtPath)' == '' And Exists('C:\msys64\usr\bin\msgfmt.exe')">C:\msys64\usr\bin\msgfmt.exe</MsgfmtPath>
    </PropertyGroup>
		<Exec Command="sh -c &quot;where msgfmt&quot;" ConsoleToMsBuild="true" Condition="'$(MsgfmtPath)' == '' And '$(OS)' == 'Windows_NT'">
			<Output TaskParameter="ConsoleOutput" PropertyName="MsgfmtPath" />
		</Exec>
		<Exec Command="sh -c &quot;which msgfmt&quot;" ConsoleToMsBuild="true" Condition="'$(MsgfmtPath)' == '' And '$(OS)' == 'Unix'">
			<Output TaskParameter="ConsoleOutput" PropertyName="MsgfmtPath" />
		</Exec>
	</Target>

	<Target
		Name="GenerateMOFiles"
		AfterTargets="FindMsgfmt"
		Inputs="@(POFiles)"
		Outputs="%(TargetPath)">
		<MakeDir Directories="%(POFiles.IntermediateDirectory)" />
		<Exec Command="&quot;$(MsgfmtPath)&quot; -o &quot;%(POFiles.TargetPath)&quot; &quot;%(POFiles.Identity)&quot;" />
		<ItemGroup>
			<Content Include="%(POFiles.TargetPath)" TargetPath="i18n/%(RecursiveDir)%(Filename).mo" CopyToOutputDirectory="PreserveNewest" PackageCopyToOutput="true" PackagePath="content/i18n/%(RecursiveDir);contentFiles/any/any/i18n/%(RecursiveDir)" />
		</ItemGroup>
	</Target>

</Project>
